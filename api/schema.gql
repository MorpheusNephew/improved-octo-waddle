# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PlayerStats {
  """Id of the game"""
  gameId: Int!

  """Id of the player"""
  playerId: Int!

  """Player full name"""
  playerName: String!

  """Id of the team"""
  teamId: Int!

  """Team name"""
  teamName: String!

  """Player age"""
  playerAge: Int

  """Player number"""
  playerNumber: String

  """Player position"""
  playerPosition: String!

  """Amount of assists"""
  assists: Int!

  """Amount of goals"""
  goals: Int!

  """Amount of hits"""
  hits: Int!

  """Amount of points"""
  points: Int!

  """Penalty minutes"""
  penaltyMinutes: Int!

  """Opponent team name"""
  opponentTeamName: String!

  """Id of opponent team"""
  opponentTeamId: Int!
}

type LoadPlayersStatsStarted {
  """Message stating statistics for players are being loaded"""
  message: String!
}

type Query {
  playerStats(queryPlayerStatsInput: QueryPlayerStatsInput!): [PlayerStats!]!
}

input QueryPlayerStatsInput {
  """An array of games to query"""
  gameIds: [Int!]

  """An array of players to query"""
  playerIds: [Int!]

  """An array of teams to query"""
  teamIds: [Int!]

  """An array of opponents to query"""
  opponentTeamIds: [Int!]

  """An array of player numbers to query"""
  playerNumbers: [String!]

  """"""
  playerPositions: [PlayerPosition!]

  """Player age"""
  playerAge: QueryPlayerStatsStatisticsInput

  """Player assists"""
  assists: QueryPlayerStatsStatisticsInput

  """Player goals"""
  goals: QueryPlayerStatsStatisticsInput

  """Player hits"""
  hits: QueryPlayerStatsStatisticsInput

  """Player points"""
  points: QueryPlayerStatsStatisticsInput
  options: QueryPlayerStatsQueryOptionsInput
}

enum PlayerPosition {
  GOALIE
  DEFENSEMAN
  RIGHT_WING
  LEFT_WING
  CENTER
  UNKNOWN
}

input QueryPlayerStatsStatisticsInput {
  """The operator to use in comparison to a value"""
  operator: String!

  """The value to be compared against"""
  value: Int!
}

input QueryPlayerStatsQueryOptionsInput {
  limit: Int
  offset: Int
}

type Mutation {
  loadPlayersStats(loadPlayersStatsInput: LoadPlayersStatsInput!): LoadPlayersStatsStarted!
}

"""
Provide either the seasonId or the gameId to load player statistics into Postgres
"""
input LoadPlayersStatsInput {
  """Id of the game to load into Postgres"""
  gameId: Int

  """Id of the season to load into Postgres"""
  seasonId: String
}